{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:     Peer_assessment_1.html\n    keep_md: true\n---\n\n===================================================\n\n\n## Loading and preprocessing the data\n\nFirst, I load data from the data file: *\"activity.csv\"* and remove the rows with missing data **NA**. In addition, I transform the column *date* to Date format. \n\nThe dataset typically has  several rows for the same day, and therefore grouping rows by day is required to calculate the average number of steps per day.\n\n```{r echo=TRUE} \nrm(list=ls())\nmydata=read.csv(\"activity.csv\")\necho=FALSE\nlibrary(dplyr)\necho=TRUE\n\n## Data transformation and grouping are combined into one command\nmydata_byday <-group_by(mutate(na.omit(mydata), date=as.Date(date)), date)\nmydata_daily<-summarize(mydata_byday, steps_daily=sum(steps))\n\n```\n\n\n## What is mean total number of steps taken per day?\n\n \nThen, we can calculate the mean and the median number of steps per day:\n\n```{r echo=TRUE}\n\nmean(mydata_daily$steps_daily)\nmedian(mydata_daily$steps_daily)\n\n```\n\n\n**Please note** that mean and the calculations of the mean and median values do not include the days for which there are no records of steps (*steps=0*). In this case the median and the mean are similar, which shows that the distribution of steps per day is not skewed. \n\nHistogram:\n\n```{r , fig.width = 8, fig.height = 4}\n\nhist(mydata_daily$steps_daily, breaks=60, main=\"The number of steps taken daily (NA removed)\", ylab=\"Frequency, days in dataset\", xlab=\"Steps per day\", col=\"blue\", border =\"white\")\n\n```\n\nThis diagram shows that there are records (days) for which there are not steps recorded. There are days for which the number of steps is greater than 20,000. It is estuimated that roughly the number of steps in a mile is 2000, therefore these records correspond to long journeys of more than 10 miles.  \n\n\n## What is the average daily activity pattern?\n\nThe pattern of daily activity can be illustrated by a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis)\n\n\n```{r fig.width = 8, fig.height = 4}\nmydata_byinterval <-group_by(na.omit(mydata), interval)\nlibrary(ggplot2)\ndata4timeseries<-summarize(mydata_byinterval, steps=mean(steps))\nggplot(data4timeseries, aes(x=interval, y=steps))+geom_line() + labs(x=\"5-min interval\", y=\"Steps\" ) + geom_point(color=\"steelblue\", alpha = 1/2) + geom_line(colour = \"steelblue\", size = 1/3) + labs(title=\"Time series for 5-min intervals\")\n\n```\n\nFurther, the maximum number of steps within a 5-minutes interval averaged across days is: \n\n```{r}\nround(max(data4timeseries$steps),1)\n```\n\nThe time interval corresponding to this value: \n\n\n```{r}\nmaxstepsinterval<-filter(data4timeseries, steps==max(data4timeseries$steps))\nmaxstepsinterval$interval\n```\n\n## Imputing missing values\n\nThe presence of missing days (values = **NA**) may introduce bias into some calculations or summaries of the data.\nThe total number of rows with missing data: \n\n\n\n\n\n\nIn order to impute the missing deta, the following approach was taken:\n\n- The value of steps for a given row in a dataset will be assumed to be equal to the average across all days corresponding to the interval for which the data alement is missing. This is done by merging the dataset with a dataset with averages steps per time interval. \n\n1. Create an NA-free dataset \n2. Create a dataset by selectung missing data \n3. Merge data in the dataset with missing data with the dataset with the averages steps\n4. Replace the missing data with the averages for specific interval \n5. Harmonize the column names\n6. Merge datasets into an NA-free dataset \n\n\n```{r}\n\nmydata_no_NA <- filter(mydata, !is.na(steps))  # step 1 \nmydata_NA <- filter(mydata, is.na(steps))     # step 2\nmydata_NA_merged<-merge(mydata_NA, data4timeseries, by = \"interval\") # step 3 \nmydata_NA<-mutate(mydata_NA_merged, steps.x=steps.y) # step 4\nmydata_NA<-select((mutate(mydata_NA, steps=steps.x)), interval, date, steps) # step 5\nmydata_new<-rbind(mydata_no_NA, mydata_NA) # step 6 \n\n```\n\n\n## Are there differences in activity patterns between weekdays and weekends?\n\n\n\nCalculating the new mean and median: \n\n```{r}\n\n## Data transformation and grouping are combined into one command\n\nmydata_byday <-group_by(mutate(mydata_new, date=as.Date(date)), date)\nmydata_daily<-summarize(mydata_byday, steps_daily=sum(steps))\n\n# Mean\nmean(mydata_daily$steps_daily)\n# Median \nmedian(mydata_daily$steps_daily)\n\n```\n\n\n#### Histogram:\n\n```{r , fig.width = 8, fig.height = 4}\n\nhist(mydata_daily$steps_daily, breaks=60, main=\"The number of steps taken daily (NA imputed)\", ylab=\"Frequency, days in dataset\", xlab=\"Steps per day\", col=\"green\", border =\"white\")\n\n```\n\n\n#### Time series\n\n```{r fig.width = 8, fig.height = 4}\nmydata_byinterval <-group_by(mydata_new, interval)\n\nlibrary(ggplot2)\n\ndata4timeseries<-summarize(mydata_byinterval, steps=mean(steps))\nggplot(data4timeseries, aes(x=interval, y=steps))+geom_line() + labs(x=\"5-min interval\", y=\"Steps\" ) + geom_point(color=\"red\", alpha = 1/2) + geom_line(colour = \"red\", size = 1/3) + labs(title=\"Time series for 5-min intervals\")\n\n```\n\n### End of assignment  \n\n\n",
    "created" : 1434226965286.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3293878009",
    "id" : "D315FA18",
    "lastKnownWriteTime" : 1434226968,
    "path" : "~/@Coursera/Reproducible Research/Peer assessment/PA-1/Peer_assessment_1.rmd",
    "project_path" : "Peer_assessment_1.rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}